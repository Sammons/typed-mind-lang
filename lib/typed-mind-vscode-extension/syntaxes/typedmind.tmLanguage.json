{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "TypedMind",
  "patterns": [
    { "include": "#comments" },
    { "include": "#entities" },
    { "include": "#operators" },
    { "include": "#strings" },
    { "include": "#keywords" },
    { "include": "#wildcards" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.number-sign.typedmind",
          "match": "#.*$"
        }
      ]
    },
    "entities": {
      "patterns": [
        {
          "name": "entity.name.type.typedmind",
          "match": "\\b(Program|File|Function|Class|Constants)\\b"
        },
        {
          "name": "entity.name.function.typedmind",
          "match": "\\b[A-Za-z][A-Za-z0-9]*\\b(?=\\s*@)"
        },
        {
          "name": "entity.name.function.typedmind",
          "match": "\\b[A-Za-z][A-Za-z0-9]*\\b(?=\\s*::)"
        },
        {
          "name": "entity.name.class.typedmind",
          "match": "\\b[A-Za-z][A-Za-z0-9]*\\b(?=\\s*<:)"
        },
        {
          "name": "entity.name.constant.typedmind",
          "match": "\\b[A-Za-z][A-Za-z0-9]*\\b(?=\\s*!)"
        },
        {
          "name": "entity.name.dto.typedmind",
          "match": "\\b[A-Za-z][A-Za-z0-9]*\\b(?=\\s*%)"
        },
        {
          "name": "entity.name.asset.typedmind",
          "match": "\\b[A-Za-z][A-Za-z0-9]*\\b(?=\\s*~)"
        },
        {
          "name": "entity.name.component.typedmind",
          "match": "\\b[A-Za-z][A-Za-z0-9]*\\b(?=\\s*&)"
        },
        {
          "name": "entity.name.parameter.typedmind",
          "match": "\\b[A-Z][A-Z0-9_]*\\b(?=\\s*\\$(env|iam|runtime|config))"
        },
        {
          "name": "entity.name.dependency.typedmind",
          "match": "\\b[A-Za-z][A-Za-z0-9@/_-]*\\b(?=\\s*\\^)"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.arrow.typedmind",
          "match": "->"
        },
        {
          "name": "keyword.operator.import.typedmind",
          "match": "<-"
        },
        {
          "name": "keyword.operator.location.typedmind",
          "match": "@"
        },
        {
          "name": "keyword.operator.signature.typedmind",
          "match": "::"
        },
        {
          "name": "keyword.operator.calls.typedmind",
          "match": "~>"
        },
        {
          "name": "keyword.operator.extends.typedmind",
          "match": "<:"
        },
        {
          "name": "keyword.operator.constants.typedmind",
          "match": "!"
        },
        {
          "name": "keyword.operator.methods.typedmind",
          "match": "=>"
        },
        {
          "name": "keyword.operator.dto.typedmind",
          "match": "%"
        },
        {
          "name": "keyword.operator.asset.typedmind",
          "match": "~"
        },
        {
          "name": "keyword.operator.component.typedmind",
          "match": "&"
        },
        {
          "name": "keyword.operator.contains.typedmind",
          "match": ">"
        },
        {
          "name": "keyword.operator.containedBy.typedmind",
          "match": "<"
        },
        {
          "name": "keyword.operator.dependency.typedmind",
          "match": "\\^"
        },
        {
          "name": "keyword.operator.parameter.typedmind",
          "match": "\\$(env|iam|runtime|config)"
        },
        {
          "name": "keyword.operator.consumes.typedmind",
          "match": "\\$<"
        },
        {
          "name": "keyword.operator.contains-program.typedmind",
          "match": ">>"
        },
        {
          "name": "keyword.operator.root-component.typedmind",
          "match": "&!"
        },
        {
          "name": "keyword.operator.default.typedmind",
          "match": "="
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.typedmind",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.typedmind",
          "match": "\\\\."
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.other.version.typedmind",
          "match": "\\bv?[0-9]+\\.[0-9]+(?:\\.[0-9]+)?(?:-[a-zA-Z0-9.-]+)?\\b"
        },
        {
          "name": "keyword.control.optional.typedmind",
          "match": "\\b(optional|required)\\b"
        },
        {
          "name": "keyword.control.import.typedmind",
          "match": "\\b(@import|import)\\b"
        },
        {
          "name": "keyword.control.as.typedmind",
          "match": "\\bas\\b"
        },
        {
          "name": "storage.type.typedmind",
          "match": "\\b(program|file|function|class|dto|component|asset|constants|parameter|dependency)\\b"
        },
        {
          "name": "storage.modifier.typedmind",
          "match": "\\b(type|description|path|entry|version|signature|input|output|calls|affects|consumes|imports|exports|extends|implements|methods|contains|containedBy|affectedBy|fields|purpose|root|paramType|required|default|importedBy)\\b:"
        }
      ]
    },
    "wildcards": {
      "patterns": [
        {
          "name": "keyword.operator.wildcard.typedmind",
          "match": "\\*"
        }
      ]
    }
  },
  "scopeName": "source.typedmind"
}