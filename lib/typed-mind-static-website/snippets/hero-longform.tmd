# Longform syntax is for humans
program TodoApp {
  entry: TodoService
  version: "1.0.0"
}

# Use ClassFile fusion operator for cleaner syntax
TodoService #: api.ts {
  extends: BaseService
  methods: [createTodo, getTodos]
  imports: [CreateTodoDto, Todo, BaseService]
}

# Define class methods as functions
function createTodo {
  signature: "(input: CreateTodoDto) => Todo"
  description: "Creates a new todo item"
  input: CreateTodoDto
  output: Todo
}

function getTodos {
  signature: "() => Todo[]"
  description: "Retrieves all todo items"
  output: Todo
}

# Define the base service for completeness
file BaseServiceModule {
  path: "base-service.ts"
  exports: [BaseService]
}

class BaseService {
  methods: [validate]
}

function validate {
  signature: "(data: any) => boolean"
  description: "Validates input data"
}

dto CreateTodoDto {
  description: "Input for creating todos"
  fields: {
    title: {
      type: "string"
      description: "Todo title"
    }
    completed: {
      type: "boolean"
      description: "Completion status"
    }
  }
}

dto Todo {
  description: "Todo entity"
  fields: {
    id: {
      type: "string"
      description: "Unique identifier"
    }
    title: {
      type: "string"
      description: "Todo title"
    }
    completed: {
      type: "boolean"
      description: "Completion status"
    }
    createdAt: {
      type: "Date"
      description: "Creation timestamp"
    }
  }
}