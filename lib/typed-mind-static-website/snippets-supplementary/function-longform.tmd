# Supplementary content for function-longform snippet
# Provides minimal context needed for validation

program FunctionExampleApp {
  entry: ExampleFile
  version: "1.0.0"
}

file ExampleFile {
  path: "examples/functions.ts"
  imports: [App]
  exports: [validateEmail, login, updateUserProfile, validateCredentials, generateToken, initializeApp]
}

# Required DTOs
dto LoginDto {
  description: "Login credentials"
  fields: {
    email: "string # User email",
    password: "string # User password"
  }
}

dto AuthToken {
  description: "Authentication token"
  fields: {
    token: "string # JWT token",
    expiresAt: "Date # Token expiration"
  }
}

dto ProfileDto {
  description: "Profile update data"
  fields: {
    name: "string # User name",
    email: "string # User email"
  }
}

dto User {
  description: "User entity"
  fields: {
    id: "string # User ID",
    name: "string # User name",
    email: "string # User email"
  }
}

# Required UI Components
component App {
  root: true
  description: "Main application component"
  contains: [ProfileComponent, HeaderComponent]
}

component ProfileComponent {
  description: "Profile display component"
  containedBy: [App]
}

component HeaderComponent {
  description: "Header component"
  containedBy: [App]
}

# Required functions for calls
function validateCredentials {
  signature: "(data: LoginDto) => boolean"
  description: "Validates user credentials"
}

function generateToken {
  signature: "(user: User) => AuthToken"
  description: "Generates authentication token"
}

function initializeApp {
  signature: "() => void"
  description: "Initializes the application UI"
  affects: [App]
}

# Required runtime parameter
parameter JWT_SECRET {
  type: "env"
  description: "JWT secret key"
  required: true
}